.not-found-content {
  /* Fondo con patrón de grid sutil */
  --background: var(--ion-background-color);
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
}

/* Grid sutil utilizando gradients (se asigna a --background) */
.grid-bg {
  --grid-size: 22px;
  --grid-color: rgba(127, 127, 127, 0.08);
  --background:
    linear-gradient(var(--grid-color) 1px, transparent 1px) 0 0/var(--grid-size) var(--grid-size),
    linear-gradient(90deg, var(--grid-color) 1px, transparent 1px) 0 0/var(--grid-size) var(--grid-size),
    var(--ion-background-color);
}

.not-found-container {
  text-align: center;
  color: var(--ion-text-color);
  max-width: 960px;
  width: 100%;
  margin-inline: auto;
}

/* 404 geométrico */
.hero-404 { margin-bottom: 1rem; }
.digits {
  width: min(90vw, 720px);
  height: auto;
  display: block;
  margin: 0 auto;
}
.digits *, .circuit-svg * {
  vector-effect: non-scaling-stroke;
  stroke: var(--ion-text-color);
  fill: none;
  stroke-width: 6;
  stroke-linecap: round;
}
/* Construcción progresiva */
.digits polyline, .digits line, .digits ellipse {
  stroke-dasharray: 600;
  stroke-dashoffset: 600;
  animation: draw 1100ms ease-out forwards;
}
.digits g:nth-child(2) * { animation-delay: 180ms; }
.digits g:nth-child(3) * { animation-delay: 360ms; }

/* Mensaje estilo tech */
.tech-message {
  margin: .25rem 0 0;
  font-weight: 600;
  letter-spacing: .04em;
  text-transform: uppercase;
}
.tech-sub {
  margin: .25rem 0 0.75rem;
  opacity: .7;
}

/* Circuito desconectado */
.circuit-svg {
  width: min(90vw, 420px);
  height: auto;
  display: block;
  margin: .25rem auto 1.25rem;
}
.circuit-svg .trace { stroke-width: 3.5; }
.circuit-svg .moving {
  stroke-dasharray: 10 12;
  animation: dash 1.2s linear infinite, draw 900ms ease-out forwards;
}
.circuit-svg .gap {
  stroke-dasharray: 3 8;
  opacity: .45;
  animation: blink 900ms steps(2, end) infinite;
}

/* Botón con corte geométrico */
ion-button.geom-btn { margin-top: 0.5rem; }
ion-button.geom-btn::part(native) {
  --background: transparent;
  --background-hover: transparent;
  --color: var(--ion-color-primary);
  border: 2px solid var(--ion-color-primary);
  clip-path: polygon(0 0, calc(100% - 18px) 0, 100% 18px, 100% 100%, 0 100%);
  transition: transform 160ms ease;
}
ion-button.geom-btn:hover::part(native) {
  transform: translateY(-2px);
  background: linear-gradient(135deg, rgba(255,255,255,0.06), rgba(255,255,255,0.02));
}

/* Animaciones base */
@keyframes draw { to { stroke-dashoffset: 0; } }
@keyframes dash { to { stroke-dashoffset: -22; } }
@keyframes blink {
  0% { opacity: 1; }
  50% { opacity: 0.6; }
  100% { opacity: 1; }
}
